<div class="{% if section.settings.enable_fullwidth %}fullwidth-container{% else %}container {% endif %}">
  <div class="color-collections-wrapper" data-coll-wrapper>
    <div class="row no-gutters">
      <div class="col-12 col-sm-12 col-md-6 col-lg-6">
        <div class="color-collections-image">
          <div class="color-collections-main-img" data-img-wrap>
            {% for block in section.blocks %}
  
                {% liquid 
                  if forloop.index == 1
                    assign class = 'active'
                  else
                    assign class = ''
                  endif

                  if block.settings.title != blank
                    assign collTitle = block.settings.title
                  else
                    assign collTitle = block.settings.colored_collection.title 
                  endif
                  
                  if block.settings.description != blank
                    assign collDesc = block.settings.description
                  else
                    assign collDesc = block.settings.colored_collection.description | strip_html | truncatewords: 10
                  endif


                  if block.settings.collection_custom_image != blank
                    assign collImage = block.settings.collection_custom_image
                  else
                    assign collImage = block.settings.colored_collection.featured_image 
                  endif

                %}            
                  
                <{% if block.settings.enable_link == true %}a href="{{ block.settings.colored_collection.url }}" title="{{ collTitle | default:shop.name  }}"{% else %}div{% endif %} class="color-collections-img-item img-item-{{ forloop.index }} {{ class }}" id="img-item-{{ block.id }}" data-item="item-{{ forloop.index }}">
                    <div class="color-collections-img-inner">
                      {% capture placeholderIndex %}{% cycle 1,2,3,4,5,6 %}{% endcapture %}
                      {% liquid 
                        if collImage != blank
                          render 'lazy-image', image: collImage, sizes:'[600,700,800,900,1000]'
                        else
                          echo 'collection-' | append: placeholderIndex | placeholder_svg_tag: 'placeholder-svg'
                        endif
                      %}
                    </div>
                    <div class="color-collections-content">
                      <div class="color-collections-content-inner">
                        {% if block.settings.show_title == true %}
                          <{{ section.settings.seo_heading }} class="color-collections-content-heading h1">{{ collTitle }}</{{ section.settings.seo_heading }}> 
                        {% endif %}
                        {% if block.settings.show_description == true %}
                          <p class="color-collections-content-desc">{{ collDesc }}</p>
                        {% endif %}
                      </div>
                    </div>                 

                </{% if block.settings.enable_link == true %}a{% else %}div{% endif %}>
            {% endfor %}
            
          </div>
          <ul class="list-unstyled color-collections-color-list" data-color-list>
            {% for block in section.blocks %}
              {% liquid 
                if forloop.index == 1
                  assign buttonClass = 'active'
                else
                  assign buttonClass = ''
                endif
              %}
              <li id="color-collections-color-item-{{ block.id }}" class="color-collections-color-item {{ buttonClass }}" data-list-item="{{ forloop.index }}" {{ block.shopify_attributes}}>
                <button aria-label="{{ collTitle | default:shop.name }}" style="background: {{ block.settings.collection_color }}" data-btn="{{ forloop.index }}"></button>
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
      <div class="col-12 col-sm-12 col-md-6 col-lg-6" data-coll-products>
      {% for block in section.blocks %}
        {% liquid 
          if forloop.index == 1
            assign ProductsClass = 'active'
          else
            assign ProductsClass = 'hidden'
          endif
        %}
      
        <div class="color-collections-products {{ ProductsClass }}" data-grid-id="{{ forloop.index }}">
          <div class="color-collections-products-list">
            {% if block.settings.colored_collection.products_count > 0 %}
              {% for product in block.settings.colored_collection.products limit:6 %}
                  <div class="color-collections-products-item" {% if settings.enable_animation %} data-aos="fade-up" data-aos-delay="{{ 100 | times : forloop.index }}"{% endif %}>
                    <div class="color-collections-products-item-img">
                      <div class="image-wrapper" style="padding-bottom:100%">

                        {% liquid
                          if product.featured_media != blank
                          render 'lazy-image', image: product.featured_media.preview_image.src
                          else
                          echo 'product-1' | placeholder_svg_tag: 'placeholder-svg'
                          endif
                        %}
                      
                      </div>
                    </div>
                    <div class="color-collections-products-item-detail">
                      <div class="color-collections-products-item-detail-content yv-product-information">
                        <a href="{{ product.url }}" class="yv-product-title" title="{{ product.title }}">{{ product.title }}</a>
                        <div class="yv-prizebox" data-saved="true" data-saved-style="currency" data-price-wrapper="">
                          <span class="yv-product-price">{{ product.selected_or_first_available_variant.price | money }}</span>
                        </div>

                        {%- for option in product.options_with_values -%}
                          {%- liquid
                            assign colorOptions = settings.color_name | downcase
                            assign downOption = option.name | downcase
                          -%}
                          {% if colorOptions contains downOption %}
                            <div class="select-color product-option-selector color-variants-wrapper">
                              <ul class="list-unstyled product-loop-variants circle">
                                {%- for value in option.values -%}
                                  {% liquid
                                    assign variantOption = 'option' | append: option.position
                                    assign colorVariant = product.variants | where: variantOption, value | first
                                    assign variantValue = product.variants | where: variantOption, value | compact: 'featured_media' | first
                                  -%}
                                  <li class="color_option variant_option" data-color-wrapper>
                                   
                                    <span
                                      class="option"
                                      data-color="{{ value }}"
                                      style="background-color:{{ value }};"
                                    ></span>
                                    {% if variantValue.featured_media != blank %}
                                      {% capture selectedColorImage %}
                                      <div class="media-content">
                                      {%- render 'lazy-image' image: variantValue.featured_media, class: 'product-first-img', width: productImageSize -%}
                                      </div>
                                    {% endcapture %}
                                      <script>
                                        {{- selectedColorImage | json -}}
                                      </script>
                                    {% endif %}
                                  </li>
                                {% endfor %}
                                
                              </ul>
                            </div>
                          {% endif %}
                        {% endfor %}
                        
                      </div>
                      <div class="color-collections-products-item-btn">
                        <a 
                          href="{{ product.url }}" 
                          class="quickView button xsmall-btn m-xsmall-btn"
                          title="{{ product.title }}"
                          data-href="{{ product.url }}"
                        >{{ 'general.quick_view_heading' | t }}</a>
                      </div>
                    </div>
                  </div>
                  {% comment %} {%- render 'product-grid', product: product -%} {% endcomment %}
              {% endfor %}
            {% else %}  
            {%- for i in (1..6) -%}  
              <div class="color-collections-products-item" {% if settings.enable_animation %} data-aos="fade-up" data-aos-delay="{{ 100 | times : forloop.index }}"{% endif %}>
                <div class="color-collections-products-item-img">
                  <div class="image-wrapper" style="padding-bottom:100%">
                    {%- capture current -%}{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}
                    {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
                  </div>
                </div>
                <div class="color-collections-products-item-detail">
                  <div class="color-collections-products-item-detail-content yv-product-information">
                    <a href="" class="yv-product-title" title="Pants (RTE test)">{{ 'onboarding.product_title' | t   }}</a>
                    <div class="yv-prizebox" data-saved="true" data-saved-style="currency" data-price-wrapper=""><span class="yv-product-price">{{ 1999 | money }}</span></div>
                  </div>
                </div>
              </div>
            {%- endfor -%}
            {% endif %}
          </div>
        </div>
      {% endfor %}
      </div>
    </div>
  </div>
</div>
<style>
  #shopify-section-{{ section.id }} .color-collections-main-img {
    width: 100%;
    position: relative;
    border-radius: var(--layoutRadius);
    height: var(--imageHeight);
  }
  #shopify-section-{{ section.id }} .color-collections-img-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index:1;
    transform: translateX(-130%) scale(1.5);
    transition: 0.8s ease;
  }
  #shopify-section-{{ section.id }} .color-collections-img-item.active.previous{
    z-index:2 !important;
  }
  #shopify-section-{{ section.id }} .color-collections-img-item.active {
    transform: translateX(0) scale(1);
    z-index:3;
  }
  #shopify-section-{{ section.id }} .color-collections-img-inner img,
  #shopify-section-{{ section.id }} .color-collections-img-inner svg{
     width:100%;
     height:100%;
     object-fit:cover;
   }
  #shopify-section-{{ section.id }}.shopify-section {
    background:var(--{{- section.settings.bgcolor -}}ColorBody);
    padding-top:{{ section.settings.top_space_desktop }}px;
    padding-bottom:{{ section.settings.bottom_space_desktop }}px;
    --imageHeight:{{ section.settings.desktop_height }};
    {%- unless section.settings.bgcolor == 'primary' or section.settings.bgcolor == 'gradient' -%}
    --primaryColorBody:var(--{{- section.settings.bgcolor -}}ColorBody);
    {%- endunless -%}
  }

  @media only screen and (max-width:575px) {
    #shopify-section-{{ section.id }}.shopify-section {
      padding-top:{{ section.settings.top_space_mobile }}px;
      padding-bottom:{{ section.settings.bottom_space_mobile }}px;
      --imageHeight:{{ section.settings.mobile_height }};
    }
  }

  {% for block in section.blocks %}
    #img-item-{{ block.id }} {
      --contentOverlay: {{ block.settings.overlay_color.red}},{{ block.settings.overlay_color.green }},{{ block.settings.overlay_color.blue }};
      --contentOverlayOpacity: {{ block.settings.overlay_range }};
      --contentColor: {{ block.settings.content_color }};
    }
  {% endfor %}
  @media (min-width: 768px){
    {% for block in section.blocks %}
      #color-collections-color-item-{{ block.id }} button:after{
        border-left-color:{{ block.settings.collection_color }};
      }
    {% endfor %}
  }
  @media (max-width: 767px){
    {% for block in section.blocks %}
      #color-collections-color-item-{{ block.id }} button:after{
        border-top-color:{{ block.settings.collection_color }};
      }
    {% endfor %}
  }
  {% if section.settings.section_visibility == 'large' %}
    @media (max-width: 767px) {
      #shopify-section-{{ section.id }}{
        display: none !important;
      }
    }
  {% elsif section.settings.section_visibility == 'small' %}
    @media (min-width: 768px) {
      #shopify-section-{{ section.id }}{
        display: none !important;
      }
    }
{% endif %}

</style>
{% schema %}
{
  "name": "t:sections.color-based-collections.name",
  "tag": "section",
  "class": "color-based-collections",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
      {
        "type": "checkbox", 
        "id": "enable_fullwidth",
        "label": "t:sections.collage.settings.enable_fullwidth.label",
        "default": false
      },
      {
        "type": "select",
        "id": "section_visibility",
        "label": "t:common.section_visibility.label",
        "default": "always",
        "options": [
          {
            "label": "t:common.section_visibility.options.always.label",
            "value": "always"
          },
          {
            "label": "t:common.section_visibility.options.small_devices.label",
            "value": "small"
          },
          {
            "label": "t:common.section_visibility.options.large_devices.label",
            "value": "large"
          }
        ]
      },
      {
        "type": "header",
        "content": "t:sections.color-based-collections.settings.collection-image.label"
      },
      {
        "type": "select",
        "id": "desktop_height",
        "label": "t:sections.slider.settings.desktop_height.label",
        "default": "550px",
        "options": [
          {
            "value": "550px",
            "label": "550px"
          },
          {
            "value": "650px",
            "label": "650px"
          },
          {
            "value": "750px",
            "label": "750px"
          },
          {
            "value": "850px",
            "label": "850px"
          }
        ]
      },
      {
        "type": "select",
        "id": "mobile_height",
        "label": "t:sections.slider.settings.mobile_height.label",
        "default": "350px",
        "options": [
          {
            "value": "350px",
            "label": "350px"
          },
          {
            "value": "450px",
            "label": "450px"
          },
          {
            "value": "550px",
            "label": "550px"
          },
          {
            "value": "650px",
            "label": "650px"
          }
        ]
      },
      {
      "type": "select",
      "id": "seo_heading",
      "label": "t:common.header.heading_tag.label",
      "info": "t:common.header.heading_tag.info",
      "default": "h3",
      "options": [
        {
          "value": "h1",
          "label": "t:common.header.heading_tag.options.h1.label"
        },
        {
          "value": "h2",
          "label": "t:common.header.heading_tag.options.h2.label"
        },
        {
          "value": "h3",
          "label": "t:common.header.heading_tag.options.h3.label"
        },
        {
          "value": "h4",
          "label": "t:common.header.heading_tag.options.h4.label"
        },
        {
          "value": "h5",
          "label": "t:common.header.heading_tag.options.h5.label"
        },
        {
          "value": "h6",
          "label": "t:common.header.heading_tag.options.h6.label"
        }
      ]
      },
      
    {
        "type": "header",
        "content": "t:common.header.color_singular_section.label"
    },  
    {
        "type": "select",
        "id": "bgcolor",
        "label": "t:common.header.background_section.label",
        "default": "primary",
        "options":[
        {
            "value":"primary",
            "label": "t:common.header.primary.label"
        },
        {
            "value":"secondary",
            "label": "t:common.header.secondary.label"
        },
        {
            "value":"tertiary",
            "label": "t:common.header.tertiary.label"
        },
        {
            "value":"quaternary",
            "label": "t:common.header.quaternary.label"
        },
        {
            "value":"gradient",
            "label": "t:common.header.gradient.label"
        }
        ]
    },
      {
        "type": "header",
        "content": "t:common.header.space_section.label"
      },
      {
        "type": "range",
        "id": "top_space_desktop",
        "label": "t:common.top_space_desktop.label",
        "default": 50,
        "min": 0,
        "max": 100,
        "step": 5
      },
      {
        "type": "range",
        "id": "bottom_space_desktop",
        "label": "t:common.bottom_space_desktop.label",
        "default": 50,
        "min": 0,
        "max": 100,
        "step": 5
      },
      {
        "type": "range",
        "id": "top_space_mobile",
        "label": "t:common.top_space_mobile.label",
        "default": 20,
        "min": 0,
        "max": 100,
        "step": 5
      },
      {
        "type": "range",
        "id": "bottom_space_mobile",
        "label": "t:common.bottom_space_mobile.label",
        "default": 20,
        "min": 0,
        "max": 100,
        "step": 5
      }
  ],
  "blocks": [
    {
        "type": "collection",
        "name": "t:sections.color-based-collections.blocks.name",
        "limit": 6,
        "settings": [
          {
            "type": "collection",
            "id": "colored_collection",
            "label": "t:sections.color-based-collections.blocks.settings.colored_collection.label"
          },
          {
            "type": "color",
            "id": "collection_color",
            "label": "t:sections.color-based-collections.blocks.settings.collection_color.label",
            "default": "#d88c51"
          },
          {
            "type": "image_picker",
            "id": "collection_custom_image",
            "label": "t:sections.color-based-collections.blocks.settings.collection_custom_image.label",
            "info": "t:sections.color-based-collections.blocks.settings.collection_custom_image.info"
          },
          {
            "type": "checkbox",
            "id": "show_title",
            "label": "t:sections.color-based-collections.blocks.settings.show_title.label",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "show_description",
            "label": "t:sections.color-based-collections.blocks.settings.show_description.label",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "enable_link",
            "label": "t:sections.color-based-collections.blocks.settings.enable_link.label",
            "default": true
          },
          {
            "type": "header",
            "content": "t:sections.color-based-collections.blocks.settings.custom-content.label",
            "info": "t:sections.color-based-collections.blocks.settings.custom-content.info"
          },
          {
            "type": "text",
            "id": "title",
            "label": "t:sections.color-based-collections.blocks.settings.title.label"
          },
          {
            "type": "textarea",
            "id": "description",
            "label": "t:sections.color-based-collections.blocks.settings.description.label"
          },
          {
            "type": "header",
            "content": "t:common.header.color_section.label"
          },
          {
            "type": "color",
            "id": "content_color",
            "label": "t:sections.color-based-collections.blocks.settings.content_color.label",
            "default": "#000000"
          },
          {
            "type": "color",
            "id": "overlay_color",
            "label": "t:sections.color-based-collections.blocks.settings.overlay_color.label",
            "default": "#000000"
          },
          {
            "type": "range",
            "id": "overlay_range",
            "label": "t:sections.color-based-collections.blocks.settings.overlay_range.label",
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.1
          }
        ]
    }
  ],
  "presets": [
    {
      "name": "Color based collection",
      "blocks": [
        {
          "type": "collection",
          "settings":{
            "collection_color":"#774023"
          }
        },
        {
          "type": "collection",
          "settings":{
            "collection_color":"#d88c51"
          }
        },
        {
          "type": "collection",
          "settings":{
            "collection_color":"#f3e7c9"
          }
        }
      ]
    }
  ]
}
{% endschema %}
