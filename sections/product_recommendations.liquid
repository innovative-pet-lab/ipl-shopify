<style>
  .related-products-container {
    max-width: 1200px;
    margin: auto;
    padding: 20px;
  }
  .related-products-container .section-heading h2 {
    font-size: 40px;
    font-weight: 700;
    margin-bottom: 2rem;
    color: #000000;
  }
  .related-products-container .product-title {
    font-size: 24px;
    font-weight: 700;
    color: #000000;
  }
  .product-grid-wrapper {
    overflow: hidden;
    position: relative;
  }
  .product-grid {
    display: flex;
    gap: 20px;
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
  }
  .product-grid::-webkit-scrollbar {
    display: none;
  }
  .product-card {
    min-width: 100%;
    border: 1px solid #73C7AD;
    border-radius: 10px;
    padding: 15px;
    text-align: left;
  }
  .product-card .img-wrap {
    text-align: center;
    margin-bottom: 15px;
    padding: 4rem 0 2rem 0;
  }
  .product-card .reco-tags {
    color: #A5A5A5;
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 10px;
    margin-top: 0.4rem;
  }
  .product-card img {
    width: 100%;
    border-radius: 5px;
  }
  .product-card .price {
    font-weight: 700;
    font-size: 20px;
    margin-bottom: 15px;
    color: #000;
  }
  .add-to-cart {
    border: none;
    font-size: 16px;
    cursor: pointer;
    text-align: center;
    margin: 2rem auto 0.5rem;
    display: block;
    color: #03B0A7!important;
    font-weight: 600;
  }
  .add-to-cart:hover {
    text-decoration: underline;
  }
  .dots-container {
    text-align: center;
    margin-top: 15px;
  }
  .dot {
    height: 10px;
    width: 10px;
    margin: 5px;
    background-color: #ccc;
    border-radius: 50%;
    display: inline-block;
    cursor: pointer;
  }
  .dot.active {
    background-color: #03B0A7;
  }
  @media (min-width: 768px) {
    .product-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
    }
    .dots-container {
      display: none;
    }
  }
</style>

<div class="related-products-container">
  <div class="product-recommendations related_products"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=3&intent=related"
    product-recommendations>
    
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
      <div class="section-heading">
        <{{ section.settings.seo_heading }} class="section-heading-title h2">Related Products</{{ section.settings.seo_heading }}>
      </div>
      
      <div id="product-recommendations-{{ section.id }}" class="yv-recent-product-grid recommend data-desktop-only">
        <div class="product-grid-wrapper">
          <div class="product-grid">
            {%- for product in recommendations.products limit: 3 -%}
              <div class="product-card">
                <div class="img-wrap">
                  <img src="{{ product.featured_image | image_url }}" alt="{{ product.title }}" class="product-image">
                </div>
                <h2 class="product-title">{{ product.title }}</h2>
                <p class="reco-tags">For Cats and Dogs</p>
                <p class="price">{{ product.price | money }}</p>
                <button class="add-to-cart" onclick="window.location.href='{{ product.url }}'">View product</button>
              </div>
            {%- endfor -%}
          </div>
          <div class="dots-container"></div>
        </div>
      </div>
      
    {%- endif -%}

  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    function initSlider() {
      const slider = document.querySelector(".product-grid");
      const dotsContainer = document.querySelector(".dots-container");

      if (!slider || !dotsContainer) return;

      const slides = slider.children;
      let currentIndex = 0;

      function createDots() {
        dotsContainer.innerHTML = "";
        for (let i = 0; i < slides.length; i++) {
          const dot = document.createElement("span");
          dot.classList.add("dot");
          if (i === 0) dot.classList.add("active");
          dot.dataset.index = i;
          dot.addEventListener("click", function () {
            currentIndex = parseInt(this.dataset.index);
            updateSlider();
          });
          dotsContainer.appendChild(dot);
        }
      }

      function updateSlider() {
        slider.scrollLeft = slides[currentIndex].offsetLeft;
        document.querySelectorAll(".dot").forEach((dot, index) => {
          dot.classList.toggle("active", index === currentIndex);
        });
      }

      slider.addEventListener("scroll", function () {
        let newIndex = Math.round(slider.scrollLeft / slides[0].offsetWidth);
        if (newIndex !== currentIndex) {
          currentIndex = newIndex;
          updateSlider();
        }
      });

      createDots();
    }

    function checkMobileAndInit() {
      if (window.innerWidth < 768) {
        initSlider();
      }
    }

    // Shopify may load recommendations dynamically, so wait for it
    const observer = new MutationObserver(() => {
      if (document.querySelector(".product-grid")) {
        checkMobileAndInit();
        observer.disconnect();
      }
    });

    observer.observe(document.body, { childList: true, subtree: true });

    // If already present, initialize
    if (document.querySelector(".product-grid")) {
      checkMobileAndInit();
    }

    window.addEventListener("resize", checkMobileAndInit);
  });
</script>

{% schema %}
{
  "name": "t:sections.product_recommendations.name",
  "tag": "section",
  "class": "product-page-recommendations recent-product-section",
  "settings": [
    {
      "label": "t:sections.product_recommendations.settings.heading.label",
      "id": "heading",
      "type": "text",
      "default": "Recommended Products"
    },
    {
      "type": "select",
      "id": "seo_heading",
      "label": "t:common.header.heading_tag.label",
      "info": "t:common.header.heading_tag.info",
      "default": "h2",
      "options": [
        { "value": "h1", "label": "t:common.header.heading_tag.options.h1.label" },
        { "value": "h2", "label": "t:common.header.heading_tag.options.h2.label" },
        { "value": "h3", "label": "t:common.header.heading_tag.options.h3.label" },
        { "value": "h4", "label": "t:common.header.heading_tag.options.h4.label" },
        { "value": "h5", "label": "t:common.header.heading_tag.options.h5.label" },
        { "value": "h6", "label": "t:common.header.heading_tag.options.h6.label" }
      ]
    },
    {
      "type": "range",
      "id": "products_count",
      "min": 2,
      "max": 10,
      "step": 1,
      "label": "t:sections.product_recommendations.settings.products_count.label",
      "default": 8
    }
  ]
}
{% endschema %}
