<style>
  .related-products-container {
    margin: auto;
    padding: 0 8%;
    margin-bottom: 4rem;
  }
  .related-products-container .section-heading .h2 {
    font-size: 40px;
    font-weight: 700;
    margin-bottom: 2rem;
    color: #000000;
  }
  .best-seller {
    position: absolute;
    top: 15px;
    left: 15px;
    background-color: #03B0A7;
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 18px;
    font-weight: 600;
    text-transform: uppercase;
  }
  @media (max-width: 500px) {
    .related-products-container .section-heading .h2 {
      font-size: 24px;
    }
  }
  .related-products-container .product-title {
    font-size: 24px;
    font-weight: 700;
    color: #000000;
  }
  .product-grid-wrapper {
    overflow: hidden;
    position: relative;
  }
  .product-grid {
    display: flex;
    gap: 20px;
    overflow-x: auto;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    cursor: pointer;
  }
  .product-grid::-webkit-scrollbar {
    display: none;
  }
  .product-card {
    min-width: 100%;
    border: 1px solid #73C7AD;
    border-radius: 10px;
    padding: 15px;
    text-align: left;
  }
  .product-card:hover {
    background-color: #F0F6F4;
  }
  .product-card:hover .img-wrap img {
    transform: rotate(-10deg) scale(1.1);
    transition: transform 0.3s ease;
  }
  .product-card .img-wrap {
    transition: transform 0.3s ease;
  }
  .product-card .img-wrap {
    text-align: center;
    margin-bottom: 15px;
    padding: 2rem 0 0rem 0;
    min-height: 18vw;
    }
  }
  .product-card .add-to-cart {
    transition: transform 0.3s ease;
  }
  .product-card .add-to-cart:hover {
    text-decoration: none;
  }
  .product-card:hover .add-to-cart {
    background-color: #EFF8F6;
    color: #03B0A7;
    border: 1px solid #46c4b5;
  }
  .product-card .reco-tags {
    color: #A5A5A5;
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 10px;
    margin-top: 0.4rem;
  }
  .product-card img {
    width: 100%;
    border-radius: 5px;
  }
  .product-card .price {
    font-weight: 700;
    font-size: 20px;
    margin-bottom: 15px;
    color: #000;
  }
  .add-to-cart {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 8px 15px;
    background-color: transparent;
    color: #46c4b5;
    border-radius: 50px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.3sease;
    min-width: 40%;
    margin: auto;
    font-size: 18px;
    border: 1px solid transparent;
  }
  .add-to-cart:hover {
    text-decoration: underline;
  }
  .dots-container {
    text-align: center;
    margin-top: 15px;
  }
  .dot {
    height: 12px;
    width: 12px;
    margin: 5px;
    background-color: transparent;
    border-radius: 50%;
    display: inline-block;
    cursor: pointer;
    border: 1px solid #26286E;
  }
  .dot.active {
    background-color: #26286E;
  }
  @media (min-width: 768px) {
    .product-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
    }
    .dots-container {
      display: none;
    }
  }
</style>

<div class="related-products-container">
  <div class="product-recommendations related_products"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=3&intent=related"
    product-recommendations>
    
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
      <div class="section-heading">
        <div class="section-heading-title h2">Related Products</div >
      </div>
      
      <div id="product-recommendations-{{ section.id }}" class="yv-recent-product-grid recommend data-desktop-only">
        <div class="product-grid-wrapper">
          <div class="product-grid">
            {%- for product in recommendations.products limit: 3 -%}
              <div class="product-card" data-product-url="{{ product.url }}">
                {% if product.tags contains 'Best Seller' %}
                  <div class="best-seller">Best Seller</div>
                {% endif %}
                <div class="img-wrap">
                  <img width="" height="" src="{{ product.featured_image | image_url }}" alt="{{ product.title }}" class="product-image">
                </div>
                <h2 class="product-title">{{ product.title }}</h2>
                <p class="reco-tags">
                  {% if product.tags.size > 0 %}
                    For {{ product.tags | join: ' and ' }}
                  {% endif %}
                </p>
                <p class="price">{{ product.price | money }}</p>
                <button data-id="{{ product.selected_or_first_available_variant.id }}" class="add-to-cart">
                <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M11.5 9H13.5V6H16.5V4H13.5V1H11.5V4H8.5V6H11.5M7.5 18C6.4 18 5.5 18.9 5.5 20C5.5 21.1 6.4 22 7.5 22C8.6 22 9.5 21.1 9.5 20C9.5 18.9 8.6 18 7.5 18ZM17.5 18C16.4 18 15.5 18.9 15.5 20C15.5 21.1 16.4 22 17.5 22C18.6 22 19.5 21.1 19.5 20C19.5 18.9 18.6 18 17.5 18ZM7.7 14.8V14.7L8.6 13H16C16.7 13 17.4 12.6 17.7 12L21.6 5L19.9 4L16 11H9L4.8 2H1.5V4H3.5L7.1 11.6L5.7 14C5.6 14.3 5.5 14.6 5.5 15C5.5 16.1 6.4 17 7.5 17H19.5V15H7.9C7.8 15 7.7 14.9 7.7 14.8Z" fill="#03B0A7"/>
                </svg>
                {{ 'products.product.add_to_cart' | t }}
              </button>
              </div>
            {%- endfor -%}
          </div>
          <div class="dots-container"></div>
        </div>
      </div>
      
    {%- endif -%}

  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    function initSlider() {
      const slider = document.querySelector(".product-grid");
      const dotsContainer = document.querySelector(".dots-container");

      if (!slider || !dotsContainer) return;

      const slides = slider.children;
      let currentIndex = 0;

      function createDots() {
        dotsContainer.innerHTML = "";
        for (let i = 0; i < slides.length; i++) {
          const dot = document.createElement("span");
          dot.classList.add("dot");
          if (i === 0) dot.classList.add("active");
          dot.dataset.index = i;
          dot.addEventListener("click", function () {
            currentIndex = parseInt(this.dataset.index);
            updateSlider();
          });
          dotsContainer.appendChild(dot);
        }
      }

      function updateSlider() {
        slider.scrollLeft = slides[currentIndex].offsetLeft;
        document.querySelectorAll(".dot").forEach((dot, index) => {
          dot.classList.toggle("active", index === currentIndex);
        });
      }

      slider.addEventListener("scroll", function () {
        let newIndex = Math.round(slider.scrollLeft / slides[0].offsetWidth);
        if (newIndex !== currentIndex) {
          currentIndex = newIndex;
          updateSlider();
        }
      });

      createDots();
    }

    function checkMobileAndInit() {
      if (window.innerWidth < 768) {
        initSlider();
      }
    }

    // Shopify may load recommendations dynamically, so wait for it
    const observer = new MutationObserver(() => {
      if (document.querySelector(".product-grid")) {
        checkMobileAndInit();
        observer.disconnect();
      }
    });

    observer.observe(document.body, { childList: true, subtree: true });

    // If already present, initialize
    if (document.querySelector(".product-grid")) {
      checkMobileAndInit();
    }

    window.addEventListener("resize", checkMobileAndInit);
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.body.addEventListener("click", function (event) {
      const button = event.target.closest(".add-to-cart");
      if (!button) return;
  
      event.preventDefault();
      event.stopPropagation();
  
      const productId = button.getAttribute("data-id");
      if (!productId) {
        console.error("No product ID found");
        return;
      }
  
      button.disabled = true;
      button.classList.add("loading");
  
      fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: productId, quantity: 1 }),
      })
        .then((response) => response.json())
        .then(() => fetch("/cart?view=jsonData"))
        .then((response) => response.text())
        .then((cartHtml) => {
          const drawerBody = document.querySelector("[data-drawer-body]");
          if (drawerBody) {
            drawerBody.innerHTML = cartHtml; 
          }
  
          // Open slide-out cart
          document.body.classList.add("side_Drawer_open");
          document.body.classList.add("yv_side_Drawer_open");
          document.querySelector(".wrapper-overlay").style.display = "block";
  
          const sideDrawer = document.querySelector("[data-side-drawer]");
          if (sideDrawer) {
            sideDrawer.focus();
          }
        })
        .catch((error) => console.error("Error adding to cart:", error))
        .finally(() => {
          button.disabled = false;
          button.classList.remove("loading");
        });
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
      document.addEventListener("mouseover", function (event) {
          const card = event.target.closest(".product-card");
          if (card) {
              console.log('logged this hover');
              // You can add a hover effect here if needed
              card.style.cursor = "pointer"; // Indicate it's clickable
          }
      });

      document.addEventListener("click", function (event) {
          const card = event.target.closest(".product-card");
          if (card) {
              console.log('logged this click');
              const productUrl = card.getAttribute("data-product-url");
              if (productUrl) {
                  window.location.assign(productUrl);
              }
          }
      });
  });
</script>
{% schema %}
{
  "name": "IPL related products",
  "settings": [
    {
      "type": "text",
      "id": "heading_text",
      "label": "Heading Text",
      "default": "Welcome to Our Store!"
    },
    {
      "type": "textarea",
      "id": "body_text",
      "label": "Body Text",
      "default": "This is a customizable page for displaying your content."
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "IPL related products"    
    }
  ]
}
{% endschema %}
